extends ./layout

block header
block body
	script.
		(function(d) {
		var wf = d.createElement('script'), s = d.scripts[0];
		wf.src = 'https://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js';
		s.parentNode.insertBefore(wf, s);
		})(document);
	#canadEditor(data-workid="#{currentArtboard.workid}")
		.canad-editor-topbar
			.presets
				a.btn.btn-withicon.orange(href='javascript:;', data-action='presets')
					.icon
						img(src='/images/icons/icon-preset.svg')
					span PRESETS
			.easy-setting
				.privacy-setting
					.toggle-component
						input#privacysetting(type='checkbox', name='privacysetting')
						label(for='privacysetting')
							.ball
				.save
					a.btn.btn-withicon.blue(href='javascript:;', data-action='saveJSON')
						.icon
							img(src='/images/icons/icon-save.svg')
						span SAVE
		//Artboard
		include ../assets/templates/artboard
		//Menu
		#menu
			.menu-inner
				ul.tools
					li
						a.basic.js-add-rect(href="javascript:;" title="新增矩形", data-action='addRect')
							i.fa.fa-object-group.fa-lg
					li
						a.basic.js-add-circle(href="javascript:;" title="新增圓形", data-action='addCircle')
							i.fa.fa-circle-thin.fa-lg
					li
						a.basic.js-add-text(href="javascript:;" title="新增文字", data-action='addText')
							i.fa.fa-font.fa-lg
					li
						a#undo.edit(href="javascript:;" title="上一步")
							i.fa.fa-reply.fa-lg
					li
						a#redo.edit(href="javascript:;" title="下一步")
							i.fa.fa-share.fa-lg
					li
						a.delete.js-dispose(href="javascript:;" title="清除所有物件", data-action='disposeAll')
							i.fa.fa-eraser.fa-lg
				
				ul.tools
					li
						a.edit.js-setting(href="javascript:;" title="版面設定", data-action='artboardSettings')
							i.fa.fa-cogs.fa-lg
						
					li
						a.edit.js-save(href="javascript:;" title="儲存", data-action='saveState')
							i.fa.fa-floppy-o.fa-lg
						ul
							li
								a.edit.js-save-json(href='javascript:;') JSON

		//CanvasSetting (Stand Alone Now)
		include ../assets/templates/canvassettings
		#loader
			.loader-inner
				img(src='/images/components/load.svg')
				p Initializing

block pagescripts
	script(src="/js/editor/vendor/fabric.js")
	script(src="/js/editor/editor/extensions/cc.Extensions.js")
	script(src="/js/editor/CanvasComposer.js")
	script(src="/js/editor/editor/cc.View.js")
	script(src="/js/editor/editor/cc.Initial.js")
	script(src="/js/editor/editor/cc.Load.js")
	script(src="/js/editor/editor/cc.History.js")
	script(src="/js/editor/editor/cc.Presets.js")
	script(src="/js/editor/editor/cc.Menu.js")
	script(src="/js/editor/editor/cc.Menu.ContextMenu.js")
	script(src="/js/editor/editor/cc.Hotkey.js")
	script(src="/js/editor/editor/cc.Artboard.js")
	script(src="/js/editor/editor/cc.Attributions.js")
	script(src="/js/editor/editor/cc.Attributions.canvas.js")
	script(src="/js/editor/editor/cc.bindEvents.js")
	script(src="/js/editor/editor/cc.MediaLibrary.js")
	script(src="/js/editor/editor/cc.Log.js")
	script(src="/js/editor/editor/cc.WeatherAPI.js")
	script(src="/js/editor/vendor/spectrum.js")
	script(src="/js/editor/vendor/Sortable.min.js")
	script(src="/js/editor/editor/cc.Api.js")
	script(src="/js/editor/vendor/moments.js")
	script.
		console.log('#{currentArtboard.data}');
		var data = {
			workData: !{JSON.stringify(currentArtboard.data)}

		};
		var worksizeArray = '#{currentArtboard.worksize}';
		var worksize = worksizeArray.split(',');
		console.log(typeof worksize[0]);
		console.log(worksize[1]);
		console.log(data.workData);
		CanvasComposer.init(data.workData,{
			'width': worksize[0],
			'height': worksize[1]
		});